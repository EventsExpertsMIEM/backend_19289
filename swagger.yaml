swagger: "2.0"
info:
  description: "Документация к REST API проекта 19289 "
  version: "1.0.0"
  title: "Experts Project"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:8080"
basePath: "/"
tags:
- name: account
  description: Работа с учетными записями пользователей
  
- name: user
  description: Работа с пользователями
  
- name: question
  description: Работа с вопросами
  
- name: article
  description: Работа со статьями. Полностью дублируются с ручками вопросов (вместо /question используйте /article)
  
- name: comment
  description: Работа с комментариями/ответами
schemes:
# - "https"
- http
paths:
  /login:
    post:
      summary: Войти в систему
      parameters:
      - name: body
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
              format: email
            password:
              type: string
              example: "123"
          required:
            - email
            - password
      tags:
      - account
      responses:
        200:
          description: Пользователь успешно залогинен
        404:
          description: Пользователь не найден
        422:
          description: Неверный пароль
  
  /logout:
    get:
      summary: Выход из системы
      tags:
      - account
      responses:
        200:
          description: Пользователь успешно вышел из системы
        401:
          description: Клиент не авторизован

  /user/{id}/questions:
    get:
      tags:
      - user
      summary: Получить все вопросы созданные пользователем
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Список вопросов (отсортированные по убыванию даты создания)
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
        404:
          description: Пользователь не найден

  /user/{id}/articles:
    get:
      tags:
      - user
      summary: Получить все статьи созданные пользователем
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Список вопросов (отсортированные по убыванию даты создания)
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
        404:
          description: Пользователь не найден

  /user/{id}/comments:
    get:
      tags:
      - user
      summary: Получить все комментарии/ответы пользователя
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Список вопросов (отсортированные по убыванию даты создания)
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        404:
          description: Пользователь не найден

  /questions:
    get:
      description: todo
      tags:
      - question
      summary: Получить список вопросов
      parameters:
      - name: offset
        in: query
        type: integer
        description: Размер смещение от первого вопроса
      - name: limit
        in: query
        type: integer
        description: Количество вопросов в выборке
      responses:
        200:
          description: Список вопросов (отсортированные по убыванию даты создания)
          schema:
            type: array
            items:
              $ref: '#/definitions/Question'
        404:
          description: Вопрос не найден

  /question:
    post:
      tags:
      - question
      summary: Создать новый вопрос
      parameters:
      - name: body
        in: body
        schema:
          type: object
          properties:
            title:
              type: string
            body:
              type: string
          required:
            - title
            - body
      responses:
        201:
          description: Вопрос успешно создан
        404:
          description: Вопрос не найден

  /question/{id}:
    parameters:
    - name: id
      in: path
      description: ID вопроса
      required: true
      type: integer
    get:
      tags:
      - question
      summary: Получить информацию о вопросе
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Question"
        404:
          description: Вопрос не найден
    put:
      tags:
      - question
      summary: Обновить вопрос
      responses:
        404:
          description: Вопрос не найден
    delete:
      tags:
      - question
      summary: Удалить вопрос
      responses:
        200:
          description: Вопрос успешно удален
        404:
          description: Вопрос не найден

  /question/{id}/comments:
    parameters:
    - name: id
      in: path
      description: ID вопроса
      required: true
      type: integer
    get:
      tags:
      - question
      summary: Получить ответы на вопрос
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Question"
        404:
          description: Вопрос не найден

  /question/{id}/comment:
    post:
      security:
      - cookieAuth: []
      tags:
      - question
      summary: Создать ответ на вопрос
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      - name: body
        in: body
        schema:
          type: object
          properties:
            text:
              type: string
          required:
            - text
      responses:
        201:
          description: Ответ успешно создан
        404:
          description: Вопрос не найден

  /question/{id}/increase-views:
    get:
      summary: Увеличить количество просмотров страницы с вопросом
      tags:
      - question
      parameters:
      - name: id
        in: path
        type: integer
        description: ID вопроса
        required: true
      responses:
        200:
          description: ОК

  /question/{id}/toggle-upvote:
    get:
      summary: Проголосовать за вопрос / отменить голос
      tags:
      - question
      parameters:
      - name: id
        in: path
        type: integer
        description: ID вопроса
        required: true
      responses:
        200:
          description: ОК

  /question/{id}/toggle-downvote:
    get:
      summary: Проголосовать против вопроса / отменить голос
      tags:
      - question
      parameters:
      - name: id
        in: path
        type: integer
        description: ID вопроса
        required: true
      responses:
        200:
          description: ОК
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Successfully downvoted question #123"

  /comment/{id}:
      parameters:
      - name: id
        in: path
        required: true
        type: integer
      get:
        tags:
        - comment
        summary: Получить информацию о комментарии
        responses:
          200:
            description: OK
            schema:
              $ref: "#/definitions/Comment"
          404:
            description: Комментарий не найден
      put:
        tags:
        - comment
        summary: Обновить комментарий
        responses:
          404:
            description: Комментарий не найден
      delete:
        tags:
        - comment
        summary: Удалить комментарий
        responses:
          200:
            description: Комментарий успешно удален
          404:
            description: Комментарий не найден

  /comment/{id}/toggle-upvote:
    get:
      summary: Проголосовать за комментарий / отменить голос
      tags:
      - comment
      parameters:
      - name: id
        in: path
        type: integer
        required: true
      responses:
        200:
          description: ОК

  /comment/{id}/toggle-downvote:
    get:
      summary: Проголосовать против комментария / отменить голос
      tags:
      - comment
      parameters:
      - name: id
        in: path
        type: integer
        required: true
      responses:
        200:
          description: ОК

securityDefinitions:
  cookieAuth:
    type: apiKey
    in: header
    name: Cookie

definitions:
  User:
    type: object
    properties:
      id:
        type: integer
      email:
        type: string
        format: email
      name:
        type: string
        description: Заголовок вопроса
      surname:
        type: string
      creation_date:
        type: number
        format: double
        description: Время создания вопроса в формате timestamp
      view_count:
        type: integer
        description: Количество просмотров страницы этого вопроса
      comment_count:
        type: integer
        description: Количество ответов на вопрос
      score:
        type: integer
        description: Оценка вопроса
  Question:
    type: object
    properties:
      id:
        type: integer
      u_id:
        type: integer
      email:
        type: string
        format: email
      title:
        type: string
        description: Заголовок вопроса
      body:
        type: string
      creation_date:
        type: number
        format: double
        description: Время создания вопроса в формате timestamp
      view_count:
        type: integer
        description: Количество просмотров страницы этого вопроса
      comment_count:
        type: integer
        description: Количество ответов на вопрос
      score:
        type: integer
        description: Оценка вопроса
      # tags:
      #   type: array
      #   description: Области вопроса
      #   items:
      #     type: string
  Comment:
    type: object
    properties:
      id:
        type: integer
      p_id:
        type: integer
        description: ID поста под которым оставлен комментарий
      u_id:
        type: integer
        description: ID автора вопроса
      email:
        type: string
        format: email
      text:
        type: string
      creation_date:
        type: number
        format: double
        description: Время создания комментария в формате timestamp
      score:
        type: integer
        description: Оценка комментария